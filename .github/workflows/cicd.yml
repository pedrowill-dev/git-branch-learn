# .github/workflows/cicd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - dev # S√≥ roda quando tiver push na branch dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
        
      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip' # Cache das depend√™ncias
          
      - name: Instalar depend√™ncias
        run: pip install -r requirements.txt
        
      - name: Rodar testes
        run: pytest --maxfail=1 --disable-warnings -q
        

  release:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    permissions:
      contents: write # Necess√°rio para push e criar tags
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necess√°rio para ter todo o hist√≥rico
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Configurar Git
        run: |
          git config --global user.name "Pedro Franca"
          git config --global user.email "pedrowill.developer@gmail.com"
          
      - name: Fazer merge dev ‚Üí main
        run: |
          git fetch origin
          git checkout main
          git merge origin/dev --no-ff -m "CI: merge dev into main [skip ci]"
          git push origin main
          
      - name: Criar tag autom√°tica
        run: |
          VERSION=v$(date +'%Y.%m.%d.%H%M')
          git tag -a $VERSION -m "Release $VERSION - Auto generated"
          git push origin $VERSION
          
      - name: Criar Release no GitHub
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v$(date +'%Y.%m.%d.%H%M')
          release_name: Release v$(date +'%Y.%m.%d.%H%M')
          body: |
            ## üöÄ Release Autom√°tico
            
            Merge autom√°tico da branch `dev` para `main` ap√≥s testes passarem.
            
            **Commits inclu√≠dos:**
            - Todos os commits da branch dev desde o √∫ltimo release
            
          draft: false
          prerelease: false